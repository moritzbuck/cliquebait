
import argparse



if __name__ == "__main__":
    parser = argparse.ArgumentParser(prog = "cliqueblocks", description=description_text, epilog = "Let's do this")
    parser.add_argument('--output', '-o', nargs = None, help = "send output to this file")
    parser.add_argument('--force', '-f', action='store_true', help = "force execution (overwritting existing files)")
    parser.add_argument('--checkm', '-k',nargs = None, help = "checkm file (or whatever you want to use as completness), if not provided, all genomes are assumed to be seed MAG (e.g complete enough)")
    parser.add_argument('--similarities', '-I', nargs = None, help = "file containing similarities between MAGs, if not provided, will use fastANI to compute one")
    parser.add_argument('--fnas','-F', nargs = '*', help = "list of nucleotide fasta-files of MAGs or whatnot")
    parser.add_argument('--prefix', '-n', nargs = None, default = "mOTU_", help = "prefix for the mOTU names, default : mOTU_ ")
    parser.add_argument('--MAG-completeness', '--MC', '-M', nargs = None, type=float, default = 40, help = "completeness cutoff for seed MAGs, default : 40")
    parser.add_argument('--MAG-contamination', '--Mc', '-m', nargs = None, type=float, default = 5, help = "contamination cutoff for seed MAGs, default : 5")
    parser.add_argument('--SUB-completeness', '--SC', '-S', nargs = None, type=float, default = 0, help = "completeness cutoff for recruited SUBs, default : 0")
    parser.add_argument('--SUB-contamination', '--Sc', '-s', nargs = None, type=float, default = 100, help = "contamination cutoff for recruited SUBs, default : 100")
    parser.add_argument('--similarity-cutoff', '-i', nargs = None, type=float, default = 95, help = "distance cutoff for making the graph, default : 95")
    parser.add_argument('--threads', '-t', nargs = None, type = int , default = multiprocessing.cpu_count(), help = "number of threads (default all, e.g. {})".format(multiprocessing.cpu_count()))
    parser.add_argument('--keep-simi-file', '-K', nargs = None, default = None, help = "keep generated similarity file if '--similarities' is not provided, does nothing if '--similarity' is provided")
    parser.add_argument('--txt', '-T', action='store_true', help = "the '--fnas' switch indicates a file with paths")
    parser.add_argument('--long', action='store_true', help = "longform output, a JSON-file with a lot more information (might be cryptic...)")
    parser.add_argument('--version','-v', action="store_true", help = "get version")

    args = parser.parse_args()

    if len(sys.argv)==1 or args.version:
        if len(sys.argv)==1:
            parser.print_help(sys.stderr)
        print("{script} Version {version}".format(script = __file__, version = __version__))
        sys.exit(1)

    motulize(args)
